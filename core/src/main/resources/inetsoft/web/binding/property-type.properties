#
# This file is part of StyleBI.
# Copyright (C) 2024  InetSoft Technology
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

alignment=number
alpha=number
background=?
borderColors=?
borders=?
dataConditions=string
enabled=bool
exportFormat=string
font=string
foreground=?
format=string
formatSpec=string
position=?
scaledPosition=?
selectedLabel=string
selectedLables=[]
selectedObject=?
selectedObjects=[]
size=number
title=string
visible=bool
wrapping=bool
titleVisible=bool
table=+Object
tableStyle=string
tablelens=?
query=string
popComponent=?
popAlpha=number
highlighted=bool
tipAlpha=string
tipView=string
Table.table.length=number
Table.table.size=number
setActionVisible=fn(actionName: string, visible: bool)
isActionVisible=fn(actionName: string) => bool
setColumnWidth=fn(col: number, width: number)
setRowHeight=fn(row: number, height: number)
appendRow=fn(row: number)
insertRow=fn(row: number)
deleteRow=fn(row: number)
CalcTable.cellFormat=?
CalcTable.col=?
CalcTable.colFormat=?
CalcTable.data.length=number
CalcTable.data.size=number
CalcTable.data=+Object
CalcTable.field=?
CalcTable.fillBlankWithZero=bool
CalcTable.flyOnClick=bool
CalcTable.flyoverViews=[string]
CalcTable.shrink=bool
CalcTable.layoutInfo.setCellBinding=fn(row: number, col: number, type: ?, value: string)
CalcTable.layoutInfo.setCellName=fn(row: number, col: number, name: string)
CalcTable.layoutInfo.setColGroup=fn(row: number, col: number, colGroup: string)
CalcTable.layoutInfo.setExpansion=fn(row: number, col: number, expansion: number)
CalcTable.layoutInfo.setMergeCells=fn(row: number, col: number, merge: bool)
CalcTable.layoutInfo.setMergeColGroup=fn(row: number, col: number, mergeCol: bool)
CalcTable.layoutInfo.setMergeRowGroup=fn(row: number, col: number, mergeRow: bool)
CalcTable.layoutInfo.setRowGroup=fn(row: number, col: number, rowGroup: string)
CalcTable.layoutInfo.setSpan=fn(row: number, col: number, span: ?)
CalcTable.row=?
CalcTable.setHyperlink=fn(row: number, col: number, link: string)
CalcTable.setObject=fn(row: number, col: number, obj: ?)
CalcTable.setPresenter=fn(row: number, col: number, obj: ?)
CalcTable.value=?
Calendar.daySelection=bool
Calendar.doubleCalendar=bool
Calendar.dropdown=bool
Calendar.fields=[]
Calendar.max=+Date
Calendar.min=+Date
Calendar.period=bool
Calendar.queries=[]
Calendar.singleSelection=bool
Calendar.submitOnChange=bool
Calendar.weekFormat=string
Calendar.yearView=bool
Chart.addConfidenceIntervalTarget=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addPercentageTarget=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addPercentileTarget=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addQuantileTarget=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addStandardDeviationTarget=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addTargetBand=fn(field: ?, class: ?, values: ?, options: ?)
Chart.addTargetLine=fn(field: ?, class: ?, values: ?, options: ?)
Chart.axis.font=?
Chart.axis.format=?
Chart.axis.increment=number
Chart.axis.labelColor=?
Chart.axis.labelVisible=bool
Chart.axis.lineColor=?
Chart.axis.lineVisible=bool
Chart.axis.logarithmic=bool
Chart.axis.maximum=number
Chart.axis.minimum=number
Chart.axis.minorIncrement=number
Chart.axis.noNull=bool
Chart.axis.reversed=bool
Chart.axis.rotation=bool
Chart.axis.setLabelAlias=string
Chart.axis.sharedRange=bool
Chart.axis.ticksVisible=bool
Chart.axis.truncate=bool
Chart.data=+Object
Chart.bindingInfo.addMapping=fn(field: string, value: string, geoLabel: string)
Chart.bindingInfo.breakdownFields=?
Chart.bindingInfo.colorFrame=?
Chart.bindingInfo.colors=?
Chart.bindingInfo.geoFields=?
Chart.bindingInfo.getCandleBindingField=fn(type: number) => ?
Chart.bindingInfo.getColorField=fn(aggregate: ?) => ?
Chart.bindingInfo.getColumnOrder=fn(field: string, type: number) => number
Chart.bindingInfo.getFormula=fn(formula: string) => ?
Chart.bindingInfo.getGroupOrder=fn(field: string, type: number) => number
Chart.bindingInfo.getMapLayer=fn(field: string) => string
Chart.bindingInfo.getMappings=fn(field: ?) => ?
Chart.bindingInfo.getPercentageType=fn(field: string, type: number) => number
Chart.bindingInfo.getSecondaryField=fn(field: string, type: number) => string
Chart.bindingInfo.getShapeField=fn(aggregate: ?) => ?
Chart.bindingInfo.getSizeField=fn(aggregate: ?) => ?
Chart.bindingInfo.getStockBindingField=ChartBindingInfoGetStockBindingField
Chart.bindingInfo.getTextField=fn(aggregate: ?) => ?
Chart.bindingInfo.getTopN=ChartBindingInfoGetTopN
Chart.bindingInfo.getTopNSummaryCol=ChartBindingInfoGetTopNSummaryCol
Chart.bindingInfo.isDiscrete=fn(measure: string, type: number) => bool
Chart.bindingInfo.isTimeSeries=fn(field: string) => bool
Chart.bindingInfo.isTopNReverse=fn(field: string, type: number) => bool
Chart.bindingInfo.lineFrame=?
Chart.bindingInfo.lines=?
Chart.bindingInfo.pathField=?
Chart.bindingInfo.removeMapping=fn(field: string, value: string)
Chart.bindingInfo.setCandleBindingField=fn(obj: ?)
Chart.bindingInfo.setColorField=fn(agg1: string, agg2: string, agg3: string)
Chart.bindingInfo.setColumnOrder=fn(field: string, order: number, type: ?, sortBy: ?)
Chart.bindingInfo.setDiscrete=fn(measure: string, discrete: bool, type: number)
Chart.bindingInfo.setFormula=fn(field: string, formula: string, type: number)
Chart.bindingInfo.setGroupOrder=fn(field: string, formula: string, type: number)
Chart.bindingInfo.setMapLayer=fn(field: string, layer: string)
Chart.bindingInfo.setPercentageType=fn(field: string, ptype: number, type: number)
Chart.bindingInfo.setSecondaryField=fn(field: string, field2: string, type: number)
Chart.bindingInfo.setShapeField=fn(agg1: string, agg2: string, agg3: string)
Chart.bindingInfo.setSizeField=fn(agg1: string, agg2: string, agg3: string)
Chart.bindingInfo.setStockBindingField=fn(obj: ?)
Chart.bindingInfo.setTextField=fn(agg1: string, agg2: string, agg3: string)
Chart.bindingInfo.setTimeSeries=fn(field: string, series: bool)
Chart.bindingInfo.setTopN=fn(dim: string, n: number)
Chart.bindingInfo.setTopNReverse=fn(dim: string, sumCol: string)
Chart.bindingInfo.setTopNSummaryCol=fn(dim: string, sumCol: number)
Chart.bindingInfo.shapeFrame=?
Chart.bindingInfo.shapes=?
Chart.bindingInfo.sizeFrame=?
Chart.bindingInfo.sizes=?
Chart.bindingInfo.textureFrame=?
Chart.bindingInfo.textures=?
Chart.bindingInfo.xFields=?
Chart.bindingInfo.yFields=?
Chart.bindingInfo=+Object
Chart.chartStyle=?
Chart.clearTargets=fn()
Chart.colorField=string
Chart.colorLegend.color=?
Chart.colorLegend.font=?
Chart.colorLegend.format=?
Chart.colorLegend.noNull=bool
Chart.colorLegend.title=string
Chart.colorLegends.color=string
Chart.colorLegends.font=string
Chart.colorLegends.format=string
Chart.colorLegends.noNull=bool
Chart.colorLegends.title=string
Chart.combinedTooltip=string
Chart.contourBandwidth=number
Chart.contourEdgeAlpha=number
Chart.contourLevels=number
Chart.dataset=+Object
Chart.diagonalColor=?
Chart.diagonalStyle=number
Chart.drillEnabled=bool
Chart.dateComparisonEnabled=?
Chart.facetGrid=bool
Chart.facetGridColor=bool
Chart.fillTimeGap=bool
Chart.fillZero=bool
Chart.flyOnClick=bool
Chart.flyoverViews=[string]
Chart.fillGapWithDash=?
Chart.geoFields=?
Chart.getTextID=fn() => string
Chart.glossyEffect=bool
Chart.graph.XTitleSpec=?
Chart.graph.YTitleSpec=?
Chart.graph.addElement=fn(index: number, element: ?)
Chart.graph.addForm=fn(form: ?)
Chart.graph.clearElements=fn()
Chart.graph.clearForms=fn()
Chart.graph.coordinate=?
Chart.graph.getCoordinate=fn() => ?
Chart.graph.getElement=fn(index: number) => ?
Chart.graph.getElementCount=fn() => number
Chart.graph.getForm=fn(index: number) => ?
Chart.graph.getFormCount=fn() => number
Chart.graph.getLegendLayout=fn() => ?
Chart.graph.getLegendPreferredSize=fn() => number
Chart.graph.getScale=?
Chart.graph.getVisualFrames=?
Chart.graph.getX2TitleSpec=?
Chart.graph.getXTitleSpec=?
Chart.graph.getY2TitleSpec=?
Chart.graph.getYTitleSpec=?
Chart.graph.legendLayout=?
Chart.graph.legendPreferredSize=number
Chart.graph.removeElement=fn(index: number)
Chart.graph.removeForm=fn(index: number)
Chart.graph.setCoordinate=fn(coordinate: ?)
Chart.graph.setLegendLayout=fn(layout: ?)
Chart.graph.setLegendPreferredSize=fn(size: number)
Chart.graph.setScale=fn(field: string, scale: ?)
Chart.graph.setX2TitleSpec=fn(spec: ?)
Chart.graph.setXTitleSpec=fn(spec: ?)
Chart.graph.setY2TitleSpec=fn(spec: ?)
Chart.graph.setYTitleSpec=fn(spec: ?)
Chart.graph.x2TitleSpec=?
Chart.graph.y2TitleSpec=?
Chart.graph=+Object
Chart.inPlot=bool
Chart.includeParentLabels=bool
Chart.legendBorder=?
Chart.legendBorderColor=?
Chart.legendPosition=?
Chart.legendTitleColor=?
Chart.legendTitleFont=?
Chart.mapDefaultColor=?
Chart.mapType=string
Chart.padding=?
Chart.panX=number
Chart.panY=number
Chart.pieExploded=bool
Chart.plotAlpha=number
Chart.plotBackground=?
Chart.pointLine=bool
Chart.projectTrendLineForward=number
Chart.paretoLineColor=?
Chart.polygonColor=?
Chart.quadrantColor=?
Chart.quadrantStyle=?
Chart.referenceLineVisible=bool
Chart.separatedStyle=bool
Chart.setHyperlink=fn(col: number, link: string)
Chart.setLabelAliasOfColorLegend=fn(label: string, alias: string)
Chart.setLabelAliasOfShapeLegend=fn(label: string, alias: string)
Chart.setLabelAliasOfSizeLegend=fn(label: string, alias: string)
Chart.setTextID=fn(id: string)
Chart.setTrendLineExcludedMeasures=fn(measures: ?)
Chart.shapeField=string
Chart.shapeLegend.color=?
Chart.shapeLegend.font=?
Chart.shapeLegend.format=?
Chart.shapeLegend.noNull=bool
Chart.shapeLegend.title=string
Chart.shapeLegends.color=?
Chart.shapeLegends.font=?
Chart.shapeLegends.format=?
Chart.shapeLegends.noNull=bool
Chart.shapeLegends.title=string
Chart.singleStyle=bool
Chart.sizeField=string
Chart.sizeLegend.color=?
Chart.sizeLegend.font=?
Chart.sizeLegend.format=?
Chart.sizeLegend.noNull=bool
Chart.sizeLegend.title=string
Chart.sizeLegends.color=?
Chart.sizeLegends.font=?
Chart.sizeLegends.format=?
Chart.sizeLegends.noNull=bool
Chart.sizeLegends.title=string
Chart.stackValue=bool
Chart.stackMeasures=bool
Chart.sortOthersLast=?
Chart.trendLine=?
Chart.textField=string
Chart.toolTip=string
Chart.trendLineColor=?
Chart.trendLineStyle=number
Chart.trendPerColor=?
Chart.valueColor=?
Chart.valueFont=?
Chart.valueFormat=?
Chart.valueFormats.color=?
Chart.valueFormats.font=?
Chart.valueFormats.format=?
Chart.valueFormats.rotation=bool
Chart.valueRotation=bool
Chart.valueVisible=bool
Chart.webMap=boolean
Chart.webMapStyle=string
Chart.wordCloudFontScale=?
Chart.x2Title.color=?
Chart.x2Title.font=?
Chart.x2Title.rotation=bool
Chart.x2Title.text=string
Chart.x2Title.visible=bool
Chart.xAxis.font=?
Chart.xAxis.format=?
Chart.xAxis.increment=number
Chart.xAxis.labelColor=?
Chart.xAxis.labelVisible=bool
Chart.xAxis.lineColor=?
Chart.xAxis.lineVisible=bool
Chart.xAxis.logarithmic=bool
Chart.xAxis.maximum=number
Chart.xAxis.minimum=number
Chart.xAxis.minorIncrement=number
Chart.xAxis.reversed=bool
Chart.xAxis.rotation=bool
Chart.xAxis.sharedRange=bool
Chart.xAxis.ticksVisible=bool
Chart.xAxis=+Object
Chart.xBandColor=?
Chart.xBandSize=number
Chart.xFields=?
Chart.xGridColor=?
Chart.xGridStyle=number
Chart.xTitle.color=?
Chart.xTitle.font=?
Chart.xTitle.rotation=bool
Chart.xTitle.text=string
Chart.xTitle.visible=bool
Chart.y2Axis.font=?
Chart.y2Axis.format=?
Chart.y2Axis.increment=number
Chart.y2Axis.labelColor=?
Chart.y2Axis.labelVisible=bool
Chart.y2Axis.lineColor=?
Chart.y2Axis.lineVisible=bool
Chart.y2Axis.logarithmic=bool
Chart.y2Axis.maximum=number
Chart.y2Axis.minimum=number
Chart.y2Axis.minorIncrement=number
Chart.y2Axis.reversed=bool
Chart.y2Axis.rotation=bool
Chart.y2Axis.sharedRange=bool
Chart.y2Axis.ticksVisible=bool
Chart.y2Axis=+Object
Chart.y2Title.color=?
Chart.y2Title.font=?
Chart.y2Title.rotation=bool
Chart.y2Title.text=string
Chart.y2Title.visible=bool
Chart.yAxis.font=?
Chart.yAxis.format=?
Chart.yAxis.increment=number
Chart.yAxis.labelColor=?
Chart.yAxis.labelVisible=bool
Chart.yAxis.lineColor=?
Chart.yAxis.lineVisible=bool
Chart.yAxis.logarithmic=bool
Chart.yAxis.maximum=number
Chart.yAxis.minimum=number
Chart.yAxis.minorIncrement=number
Chart.yAxis.reversed=bool
Chart.yAxis.rotation=bool
Chart.yAxis.sharedRange=bool
Chart.yAxis.ticksVisible=bool
Chart.yAxis=+Object
Chart.yBandColor=?
Chart.yBandSize=number
Chart.yFields=?
Chart.yGridColor=?
Chart.yGridStyle=number
Chart.yTitle.color=?
Chart.yTitle.font=?
Chart.yTitle.rotation=number
Chart.yTitle.text=string
Chart.yTitle.visible=bool
Chart.zoom=number
Chart.zoomLevel=number
Crosstab.bindingInfo.colFields=?
Crosstab.bindingInfo.getColumnOrder=fn(field: string, header: number) => number
Crosstab.bindingInfo.getFormula=fn(field: string) => string
Crosstab.bindingInfo.getGroupOrder=fn(field: string, header: number) => number
Crosstab.bindingInfo.getGroupTotal=fn(field: string, header: number) => bool
Crosstab.bindingInfo.getPercentageType=fn(field: string) => string
Crosstab.bindingInfo.getTopN=fn(field: string, header: number) => number
Crosstab.bindingInfo.getTopNSummaryCol=fn(field: string, header: number) => string
Crosstab.bindingInfo.isGroupOthers=fn(field: string, header: number) => bool
Crosstab.bindingInfo.isTimeSeries=fn(field: string) => bool
Crosstab.bindingInfo.isTopNReverse=fn(field: string, header: number) => bool
Crosstab.bindingInfo.measureFields=?
Crosstab.bindingInfo.percentageMode=?
Crosstab.bindingInfo.rowFields=?
Crosstab.bindingInfo.setColumnOrder=fn(field: string, header: number, type: number, sortBy: string)
Crosstab.bindingInfo.setFormula=fn(field: string, formula: string, formula: string)
Crosstab.bindingInfo.setGroupOrder=fn(field: string, header: number, order: number)
Crosstab.bindingInfo.setGroupOthers=fn(field: string, header: number, others: bool)
Crosstab.bindingInfo.setGroupTotal=fn(field: string, header: number)
Crosstab.bindingInfo.setPercentageType=fn(field: string, ptype: number, type: number)
Crosstab.bindingInfo.setTimeSeries=fn(field: string, series: bool)
Crosstab.bindingInfo.setTopN=fn(field: string, topn: number, type: number)
Crosstab.bindingInfo.setTopNReverse=fn(field: string, header: number, reverse: bool)
Crosstab.bindingInfo.setTopNSummaryCol=fn(field: string, header: number, sumfield: string)
Crosstab.bindingInfo.showColumnTotal=fn(show: bool)
Crosstab.bindingInfo.showRowTotal=fn(show: bool)
Crosstab.bindingInfo=+Object
Crosstab.cellFormat=?
Crosstab.col=?
Crosstab.colFormat=?
Crosstab.commit=bool
Crosstab.data.length=number
Crosstab.data.size=number
Crosstab.data=+Object
Crosstab.drillEnabled=bool
Crosstab.field=?
Crosstab.fillBlankWithZero=bool
Crosstab.flyOnClick=bool
Crosstab.flyoverViews=?
Crosstab.getFormRow=fn(row: number) => ?
Crosstab.getFormRows=fn(row: ?) => ?
Crosstab.getHiddenColumnValue=fn(col: string, row: number) => ?
Crosstab.mergeSpan=bool
Crosstab.row=?
Crosstab.setHyperlink=fn(row: number, col: number, link: string)
Crosstab.setObject=fn(row: number, col: number, value: ?)
Crosstab.setPresenter=fn(row: number, col: number, presenter: ?)
Crosstab.shrink=bool
Crosstab.summarySideBySide=bool
Crosstab.value=?
Field.datatype=string
Field.embeddedDataOnBottom=bool
Field.labels=?
Field.maxDate=+Date
Field.minDate=+Date
Field.serverTimeZone=bool
Field.sortByValue=bool
Field.sortType=?
Field.submitOnChange=bool
Field.values=?
Gauge.fields=?
Gauge.formula=string
Gauge.hyperlink=string
Gauge.labelVisible=bool
Gauge.majorInc=number
Gauge.max=number
Gauge.min=number
Gauge.minorInc=number
Gauge.rangeColors=?
Gauge.rangeGradient=bool
Gauge.ranges=?
Gauge.shadow=bool
Gauge.value=number
Gauge.valueFillColor=bool
Image.animate=bool
Image.hyperlink=string
Image.image=string
Image.imageAlpha=number
Image.maintainAspectRatio=bool
Image.scale9=?
Image.scaleImage=bool
Image.shadow=bool
Image.tile=bool
Image.value=number
Line.beginArrowStyle=number
Line.endArrowStyle=number
Line.lineStyle=number
Oval.gradientColor=?
Oval.lineStyle=number
Oval.shadow=bool
RangeSlider.composite=bool
RangeSlider.currentVisible=bool
RangeSlider.fields=?
RangeSlider.length=number
RangeSlider.logScale=bool
RangeSlider.max=?
RangeSlider.maxRangeSize=number
RangeSlider.maxVisible=bool
RangeSlider.min=?
RangeSlider.minVisible=bool
RangeSlider.queries=?
RangeSlider.rangeMax=?
RangeSlider.rangeMin=?
RangeSlider.rangeSize=number
RangeSlider.rangeType=number
RangeSlider.tickVisible=bool
RangeSlider.upperInclusive=bool
Rectangle.gradientColor=?
Rectangle.lineStyle=number
Rectangle.roundCorner=number
Rectangle.shadow=bool
Selection.drillMember=string
Selection.drillMembers=?
Selection.dropdown=bool
Selection.expandAll=bool
Selection.fields=?
Selection.formula=string
Selection.measure=string
Selection.queries=?
Selection.showBar=bool
Selection.showText=bool
Selection.singleSelection=bool
Selection.singleSelectionLevels=?
Selection.sortType=number
Selection.submitOnChange=bool
Selection.suppressBlank=bool
SelectionContainer.adhocEnabled=bool
SelectionContainer.empty=bool
SelectionContainer.showCurrentSelection=bool
Slider.currentVisible=bool
Slider.increment=number
Slider.labelVisible=bool
Slider.max=number
Slider.maxVisible=bool
Slider.min=number
Slider.minVisible=bool
Slider.submitOnChange=bool
Slider.tickVisible=bool
Spinner.increment=number
Spinner.max=number
Spinner.min=number
Spinner.submitOnChange=?
Submit.refreshAfterSubmit=?
Table.applyChanges=fn()
Table.col=?
Table.colFormat=?
Table.commit=fn()
Table.data.length=number
Table.data.size=number
Table.data=+Object
Table.del=bool
Table.edit=bool
Table.field=?
Table.fields=[]
Table.flyOnClick=bool
Table.flyoverViews=[string]
Table.form=bool
Table.getFormRow=fn(row: nummber) => ?
Table.getFormRows=fn(row: ?) => ?
Table.getHiddenColumnValue=fn(name: string, index: number)
Table.insert=bool
Table.row=?
Table.setHyperlink=fn(row: number, col: number, link: string)
Table.setObject=fn(row: number, col: number, value: ?)
Table.setPresenter=fn(row: number, col: number, presenter: ?)
Table.shrink=bool
Table.value=?
Tab.labels=[]
Tab.selectedIndex=number
Text.autoSize=bool
Text.embedAsURL=bool
Text.fields=[]
Text.formula=string
Text.hyperlink=?
Text.scaleVertical=bool
Text.setPresenter=fn(presenter: ?)
Text.shadow=bool
Text.text=string
Text.value=?
TextInput.submitOnChange=bool
TextInput.value=?
Upload.getFileName=string
Upload.isLoaded=bool
Upload.submitOnChange=bool
thisViewsheet.scheduleAction=fn(action: bool, emails: ?)
thisViewsheet.taskName=string
thisViewsheet.updateTime=+Date
thisViewsheet.viewsheetAlias=string
thisViewsheet.viewsheetName=string
thisViewsheet.viewsheetPath=string
